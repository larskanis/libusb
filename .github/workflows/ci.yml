name: Build docker images
concurrency:
  group: "${{github.workflow}}-${{github.ref}}"
  cancel-in-progress: true
on:
  workflow_dispatch:
  schedule:
    - cron: "0 5 * * 3" # At 05:00 on Wednesday # https://crontab.guru/#0_5_*_*_3
  push:
    branches:
      - master
    tags:
      - "*.*.*"
  pull_request:
    types: [opened, synchronize]
    branches:
      - "*"

jobs:
  # These jobs use Buildx layer caching
  docker_build:
    name: Build

    strategy:
      fail-fast: false
      matrix:
        platform:
          - x86-mingw32
          - x64-mingw-ucrt
          - x64-mingw32
          - x86-linux-gnu
          - x86_64-linux-gnu
          - x86-linux-musl
          - x86_64-linux-musl

    runs-on: ubuntu-latest
    env:
      PLATFORM: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Build libusb.gem
        run: |
          bundle exec rake gem:native:${PLATFORM}

      - name: Upload binary gem
        uses: actions/upload-artifact@v4
        with:
          name: gem-${{ matrix.platform }}
          path: pkg/*-*-*.gem

      - if: matrix.platform == 'jruby'
        name: Upload source gem
        uses: actions/upload-artifact@v4
        with:
          name: gem-ruby
          path: pkg/*-?.?.?.gem

  job_test_native:
    name: Bin (${{matrix.ruby}}, ${{matrix.os}}, ${{matrix.platform}})
    needs: docker_build
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows
            ruby: "2.5"
            platform: x64-mingw32
          - os: windows
            ruby: "3.3"
            platform: x64-mingw-ucrt
          - os: ubuntu
            ruby: "2.5"
            platform: x86_64-linux-gnu
          - os: ubuntu
            ruby: "3.3"
            platform: x86_64-linux-gnu

    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
      - run: ruby --version
      - name: Download gem-${{matrix.platform}}
        uses: actions/download-artifact@v4
        with:
          name: gem-${{ matrix.platform }}
      - name: Update rubygems - ruby-2.5
        if: matrix.ruby == '2.5'
        run: |
          gem install --no-doc rubygems-update -v 3.3.27
          update_rubygems
      - name: Install gem-${{matrix.platform}}
        run: gem install *.gem --verbose
      - name: bundle install
        run: bundle install
      - name: Generate Gemfile_libusb_gem to ensure the installed gem is used
        run: bundle exec rake gemfile_libusb_gem
      - name: Run tests
        env:
          BUNDLE_GEMFILE: Gemfile_libusb_gem
        run: |
          bundle exec rake ci


  job_binary_multiarch:
    name: multiarch (${{matrix.platform}} on ${{matrix.from_image}} ${{matrix.image_platform}})
    needs: docker_build
    strategy:
      fail-fast: false
      matrix:
        include:
          - from_image: centos
            image_platform: linux/x86_64
            gem_platform: x86_64-linux-gnu
            dockerfile: centos
          - from_image: alpine
            image_platform: linux/386
            gem_platform: x86-linux-musl
            dockerfile: alpine
          - from_image: alpine
            image_platform: linux/x86_64
            gem_platform: x86_64-linux-musl
            dockerfile: alpine

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download gem-${{matrix.gem_platform}}
        uses: actions/download-artifact@v4
        with:
          name: gem-${{ matrix.gem_platform }}
      - name: Build image and Run tests
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker build --rm --platform ${{matrix.image_platform}} --build-arg from_image=${{matrix.from_image}} -t ruby-test -f test/env/Dockerfile.${{matrix.dockerfile}} .
          docker run --rm -t --network=host -v `pwd`:/build ruby-test

  # These jobs use Buildx layer caching
  source_gem:
    name: Source gem

    strategy:
      fail-fast: false

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: Build libusb.gem
        run: |
          bundle exec rake gem

      - name: Upload binary gem
        uses: actions/upload-artifact@v4
        with:
          name: gem-ruby
          path: pkg/*.gem

  job_test_source:
    name: Src (${{matrix.ruby}}, ${{matrix.os}})
    needs: source_gem
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows
          - ubuntu
          - macos
        ruby:
          - "3.3"
          - "2.5"
          - "head"
          - "jruby"
          - "truffleruby"
        exclude:
          - os: windows
            ruby: "truffleruby"
          - os: windows
            # configure: error: unrecognized option: `--prefix\=D:/jruby-9.4.6.0/lib/ruby/gems/shared/gems/libusb-0.6.4/ports/x86_64-w64-mingw32/libusb/1.0.27'
            ruby: "jruby"

    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
      - run: ruby --version
      - name: Download gem
        uses: actions/download-artifact@v4
        with:
          name: gem-ruby
      - name: Install gem
        run: gem install *.gem --verbose
      - name: bundle install
        run: bundle install
      - name: Generate Gemfile_libusb_gem to ensure the installed gem is used
        run: bundle exec rake gemfile_libusb_gem
      - name: Run tests
        env:
          BUNDLE_GEMFILE: Gemfile_libusb_gem
        run: |
          bundle exec rake ci
